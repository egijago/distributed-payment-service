version: "3.7"

services:
  transaction-service-db:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  transaction-command-service:
    build:
      context: ./transaction-command-service/.
    ports:
      - "8001:8000"
    volumes:
      - "./transaction-command-service/.:/app"
      - "/app/node_modules"
    command: >
      sh -c "
            npx prisma db push &&
            npx prisma generate dev &&
            npm run dev"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      transaction-service-db:
        condition: service_healthy
  transaction-query-service:
    build:
      context: ./transaction-query-service/.
    ports:
      - "8002:8000"
    env_file:
      - ./transaction-query-service/.env
    volumes:
      - "./transaction-query-service/.:/app"
      - "/app/node_modules"
    command: >
      sh -c "
            npx prisma generate dev &&
            npm run dev"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      transaction-service-db:
        condition: service_healthy
volumes:
  mongo1_data:
  mongo1_config: